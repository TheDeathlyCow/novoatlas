architectury {
    common rootProject.enabled_platforms.split(',')
}

dependencies {
    // We depend on Fabric Loader here to use the Fabric @Environment annotations,
    // which get remapped to the correct annotations on each platform.
    // Do NOT use other classes from Fabric Loader.
    modImplementation "net.fabricmc:fabric-loader:$rootProject.fabric_loader_version"

    modCompileOnly("com.github.glitchfiend:TerraBlender-fabric:$rootProject.minecraft_version-$rootProject.terrablender_version")
}

loom {
    accessWidenerPath = file("src/main/resources/novoatlas.accesswidener")
}

def copyExamplePacksToPlatform = { String name ->
    def exampleSourceDir = file("$rootDir/examples")
    def targetDir = file("$rootDir/$name/src/main/resources/resourcepacks")

    group = "build"

    tasks.register("copyExamplePacksTo${name.capitalize()}", Copy) {
        if (targetDir.exists()) {
            println "Clearing contents of ${targetDir}"
            targetDir.deleteDir()
        }

        from(exampleSourceDir) {
            includeEmptyDirs = false
        }

        into(targetDir)
    }
}

def copyExamplePacksToFabric = copyExamplePacksToPlatform("fabric")
def copyExamplePacksToNeoforge = copyExamplePacksToPlatform("neoforge")

def copyExamplePacks = tasks.register("copyExamplePacks") {
    group = "build"
    dependsOn(copyExamplePacksToFabric, copyExamplePacksToNeoforge)
}
